{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2020-02-05T00:43:08.313Z",
    "end": "2020-02-05T00:43:09.033Z",
    "duration": 720,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "783c30fe-6b76-4fa0-9d78-88db9bc154c0",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "973736b3-3276-456c-9ccc-97747487d95b",
        "title": "OMDB Movie List API test",
        "fullFile": "E:\\Kuliah\\Ralali\\ralali-test\\poc-mocha-chai\\api\\test\\movie-list-test.js",
        "file": "\\api\\test\\movie-list-test.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "@get ${testCase.positive.getList}",
            "fullTitle": "OMDB Movie List API test @get ${testCase.positive.getList}",
            "timedOut": false,
            "duration": 266,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200);",
            "err": {},
            "isRoot": false,
            "uuid": "06deb890-eb4b-4819-8514-0a27ba10a5bd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.positive.resetSearch}",
            "fullTitle": "OMDB Movie List API test @get ${testCase.positive.resetSearch}",
            "timedOut": false,
            "duration": 135,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, keySearch);\nassert(response.status).to.equal(200);",
            "err": {},
            "isRoot": false,
            "uuid": "0bd23326-0f24-48e9-b0f8-6263e85a483b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.negative.noSearch}",
            "fullTitle": "OMDB Movie List API test @get ${testCase.negative.noSearch}",
            "timedOut": false,
            "duration": 129,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(apiKey, '');\nassert(response.status).to.equal(200, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Something went wrong.');",
            "err": {},
            "isRoot": false,
            "uuid": "04661be8-8741-450d-9974-7c9c400e3f97",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "@get ${testCase.negative.invalidApiKey}",
            "fullTitle": "OMDB Movie List API test @get ${testCase.negative.invalidApiKey}",
            "timedOut": false,
            "duration": 118,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "const response = await page.getMovieList(invalidApiKey, keySearch);\nassert(response.status).to.equal(401, response.body.Error);\nassert(response.body.Response).to.equal('False');\nassert(response.body.Error).to.equal('Invalid API key!');",
            "err": {},
            "isRoot": false,
            "uuid": "17902951-008f-467a-bb4c-d9619a4f83cb",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "06deb890-eb4b-4819-8514-0a27ba10a5bd",
          "0bd23326-0f24-48e9-b0f8-6263e85a483b",
          "04661be8-8741-450d-9974-7c9c400e3f97",
          "17902951-008f-467a-bb4c-d9619a4f83cb"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 648,
        "root": false,
        "rootEmpty": false,
        "_timeout": 180000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 180000
  },
  "copyrightYear": 2020
}